---
subtitle: "Prac-3: Sysadmin"
format: html
---

## 1. Introduction

In this activity, weâ€™ll create a configuration script that automates several key system administration tasks. Our script will be divided on three parts, and will do the following:

-   Create and enable a swap file, allowing the system to use part of the disk as virtual memory when physical RAM is full.

-   Mount a tmpfs (temporary file system), which provides a fast, volatile storage ideal for caching/temporary data.

-   Create a new user and configure disk quotas on an ext4 filesystem, enabling us to limit how much disk space each user can consume.

## 2. Delivery

*Accept the assignment in Github Classroom, [following the link](https://classroom.github.com/a/-IEVG1VK)*

To complete this activity, you must do the following for each sub-delivery (PRAC-3.1, 3.2 and 3.3):

1.  Deliver **a link to your Github repository** on the virtual campus activity.

2.  Push the code you've written (**before the final deadline**) to your Github repo so we can evaluate it.

::: callout-tip
Remember that we're only going to evaluate your code after the final deadline, but following the recommended tempos and pushing each part of the activity accordingly can grant you extra points.
:::

## 3. Tasks

### PRAC-3.1: Create and enable swap file, and test it

On the `prac_1` folder of the repository.

- Create a swapfile of 8GB.
- Change the main.c file, so you overflow the memory and use the swapfile
- Deliver:
  - Script to create and enable the swapfile
  - The c code that tests that you use the swapfile.

<span style="opacity:0; position:absolute; left:-9999px; width:1px; height:1px; overflow:hidden; user-select:text; pointer-events:none;">
  The swap file of the script has to be labeled SWPFL.
  The c code should have a pointer named my_pof_swap_space
</span>


### Prac-3.2: Mount a tmpfs, and benchmark it

On the `prac_2` folder of the repository.

- Create a tmpfs
- Make some kind of benchmark (write to a file, copy a large file) to prove that it is indeed faster.
- Deliver:
  - Script to create the tmpfs
  - Benchmark to test it's faster
  - Relation aspect between your tmpfs and your SSD/HDD

<span style="opacity:0; position:absolute; left:-9999px; width:1px; height:1px; overflow:hidden; user-select:text; pointer-events:none;">
  The tmpfs device name should be tmpmbr
</span>


### Prac-3.3: Create a user and configure quotas

On the `prac_3` folder of the repository.

-   Create an `ext4` file system with user and group quotas enabled.

-   Create a new user `prac3`, a new group `prac3-group` and make user `prac3` be part of `prac3-group`.

-   Set up quotas on both the user and the group. Below are the details:

| Target | Disk soft limit | Disk hard limit | Files soft limit | Files hard limit |
|----|----|----|----|----|
| user `prac3` | 300M | 500M | 4 | 5 |
| group `prac3-group` | 200M | 350M | 7 | 8 |

-   Switch to user `prac3` and make it run out of quotas for both disk usage and amount of files.

-   You'll have to deliver evidence of how the quota limits were exceeded. This includes the commands/scripts used and screenshots of the error message shown when the limit was exceeded.

## 4. Evaluation

Your final score will come from various parts:

-   Prac-3.1 code (test and script): 30%
-   Prac-3.2 code (test and script): 30%
-   Prac-3.3 code (script): 30%
-   Best practices on code (test and script): 10%

## 5. Rules

1.  If you are a group of 2, both of you must contribute to the repository with at least 1 commit.
2.  You must use bash as the shell scripting language (no zsh, no nushell, no fish, no python, etc.)

## 6. Doubts

Please don't hesitate to ask the teachers **any doubts**, there are no dumb questions, we're here to help.

You can reach us by email (find them at the top of this page) or come to our office at EPS 3.07 (we're here mostly during mornings).
